{"ast":null,"code":"import React from 'react';\nimport PerformanceItem from './PerformanceItem';\nimport { differenceInCalendarMonths } from 'date-fns';\n\nconst Calculate = props => {\n  var dict = {};\n  props.items.map(item => {\n    if (!item.userid in dict) {\n      dict[item.userid] = {\n        name: item.name,\n        time: [],\n        status: []\n      };\n    } //date has to be in range 5 days\n\n\n    var date = item.time.split(' ');\n    console.log(date[0]);\n    dict[item.userid].time.push(item.time);\n    dict[item.userid][status].push(item.status);\n  });\n  return \"Caculate\";\n};\n\nexport default Calculate;","map":{"version":3,"sources":["/Users/liwentian/Desktop/intern/slackapp/src/performance/components/Calculate.js"],"names":["React","PerformanceItem","differenceInCalendarMonths","Calculate","props","dict","items","map","item","userid","name","time","status","date","split","console","log","push"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAASC,0BAAT,QAA2C,UAA3C;;AAIA,MAAMC,SAAS,GAAGC,KAAK,IAAI;AACvB,MAAIC,IAAI,GAAG,EAAX;AACAD,EAAAA,KAAK,CAACE,KAAN,CAAYC,GAAZ,CAAgBC,IAAI,IAAE;AAClB,QAAG,CAACA,IAAI,CAACC,MAAN,IAAgBJ,IAAnB,EAAwB;AACpBA,MAAAA,IAAI,CAACG,IAAI,CAACC,MAAN,CAAJ,GAAoB;AAACC,QAAAA,IAAI,EAACF,IAAI,CAACE,IAAX;AAAgBC,QAAAA,IAAI,EAAC,EAArB;AAAwBC,QAAAA,MAAM,EAAC;AAA/B,OAApB;AACH,KAHiB,CAIlB;;;AACA,QAAIC,IAAI,GAAGL,IAAI,CAACG,IAAL,CAAUG,KAAV,CAAgB,GAAhB,CAAX;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAAC,CAAD,CAAhB;AACAR,IAAAA,IAAI,CAACG,IAAI,CAACC,MAAN,CAAJ,CAAkBE,IAAlB,CAAuBM,IAAvB,CAA4BT,IAAI,CAACG,IAAjC;AACAN,IAAAA,IAAI,CAACG,IAAI,CAACC,MAAN,CAAJ,CAAkBG,MAAlB,EAA0BK,IAA1B,CAA+BT,IAAI,CAACI,MAApC;AACH,GATD;AAWF,SACI,UADJ;AAGD,CAhBD;;AAkBA,eAAeT,SAAf","sourcesContent":["import React from 'react';\n\nimport PerformanceItem from './PerformanceItem';\nimport { differenceInCalendarMonths } from 'date-fns';\n\n\n\nconst Calculate = props => {\n    var dict = {};\n    props.items.map(item=>{\n        if(!item.userid in dict){\n            dict[item.userid] = {name:item.name,time:[],status:[]};\n        }\n        //date has to be in range 5 days\n        var date = item.time.split(' ');      \n        console.log(date[0]);\n        dict[item.userid].time.push(item.time);\n        dict[item.userid][status].push(item.status);\n    })\n    \n  return (\n      \"Caculate\"\n  )\n};\n\nexport default Calculate;\n"]},"metadata":{},"sourceType":"module"}