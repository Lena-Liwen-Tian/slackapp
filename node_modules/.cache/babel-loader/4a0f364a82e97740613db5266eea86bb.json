{"ast":null,"code":"var _jsxFileName = \"/Users/liwentian/Desktop/PumpkinMovie1/frontend/src/movies/pages/Description.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { useParams } from 'react-router-dom';\nimport Button from '../../shared/components/FormElements/Button';\nimport Card from '../../shared/components/UIElements/Card';\nimport MovieDescription from './MovieDescription';\n\nconst Description = props => {\n  let movieid = useParams().movieId;\n  const [LoadedDes, setLoadedDes] = useState();\n  const [isLoading, setisLoading] = useState(false);\n  const [error, setError] = useState();\n  const [Loadedshowtimes, setLoadedshowtimes] = useState();\n  useEffect(() => {\n    const fetchDes = async () => {\n      setisLoading(true);\n\n      try {\n        console.log(movieid);\n        console.log(movieid);\n        const response = await fetch(`http://localhost:5000/api/movies/${movieid}`);\n        const responseData = await response.json();\n        console.log(responseData);\n\n        if (!response.ok) {\n          console.log(responseData);\n          throw new Error(responseData.message);\n        }\n\n        setLoadedDes(responseData.movie);\n        setLoadedshowtimes(responseData.showtimes);\n      } catch (err) {\n        setError(err.message);\n      }\n\n      setisLoading(false);\n    };\n\n    fetchDes();\n  }, [movieid]);\n\n  const errorHandler = () => {\n    setError = null;\n  };\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, isLoading && React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(LoadingSpinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  })), !isLoading && LoadedDes && React.createElement(MovieDescription, {\n    des: LoadedDes,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }));\n};\n\nexport default Description;","map":{"version":3,"sources":["/Users/liwentian/Desktop/PumpkinMovie1/frontend/src/movies/pages/Description.js"],"names":["React","useState","useEffect","useHttpClient","LoadingSpinner","useParams","Button","Card","MovieDescription","Description","props","movieid","movieId","LoadedDes","setLoadedDes","isLoading","setisLoading","error","setError","Loadedshowtimes","setLoadedshowtimes","fetchDes","console","log","response","fetch","responseData","json","ok","Error","message","movie","showtimes","err","errorHandler"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,SAASC,aAAT,QAA8B,8BAA9B;AACA,OAAOC,cAAP,MAA2B,mDAA3B;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,MAAP,MAAmB,6CAAnB;AACA,OAAOC,IAAP,MAAiB,yCAAjB;AACA,OAAOC,gBAAP,MAA4B,oBAA5B;;AAEE,MAAMC,WAAW,GAAGC,KAAK,IAAI;AAC7B,MAAIC,OAAO,GAAGN,SAAS,GAAGO,OAA1B;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,EAA1C;AACA,QAAM,CAACc,SAAD,EAAWC,YAAX,IAA2Bf,QAAQ,CAAC,KAAD,CAAzC;AACA,QAAM,CAACgB,KAAD,EAAQC,QAAR,IAAoBjB,QAAQ,EAAlC;AACA,QAAM,CAACkB,eAAD,EAAiBC,kBAAjB,IAAuCnB,QAAQ,EAArD;AACAC,EAAAA,SAAS,CAAC,MAAM;AACb,UAAMmB,QAAQ,GAAG,YAAY;AAC5BL,MAAAA,YAAY,CAAC,IAAD,CAAZ;;AACA,UAAG;AACDM,QAAAA,OAAO,CAACC,GAAR,CAAYZ,OAAZ;AACAW,QAAAA,OAAO,CAACC,GAAR,CAAYZ,OAAZ;AACA,cAAMa,QAAQ,GAAE,MAAMC,KAAK,CAAE,oCAAmCd,OAAQ,EAA7C,CAA3B;AACA,cAAMe,YAAY,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAA3B;AACAL,QAAAA,OAAO,CAACC,GAAR,CAAYG,YAAZ;;AACA,YAAG,CAACF,QAAQ,CAACI,EAAb,EAAgB;AACdN,UAAAA,OAAO,CAACC,GAAR,CAAYG,YAAZ;AACA,gBAAM,IAAIG,KAAJ,CAAUH,YAAY,CAACI,OAAvB,CAAN;AACD;;AACDhB,QAAAA,YAAY,CAACY,YAAY,CAACK,KAAd,CAAZ;AACAX,QAAAA,kBAAkB,CAACM,YAAY,CAACM,SAAd,CAAlB;AAED,OAbD,CAaE,OAAOC,GAAP,EAAY;AACZf,QAAAA,QAAQ,CAACe,GAAG,CAACH,OAAL,CAAR;AACD;;AACDd,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAnBA;;AAqBDK,IAAAA,QAAQ;AACT,GAvBQ,EAuBP,CAACV,OAAD,CAvBO,CAAT;;AAwBA,QAAMuB,YAAY,GAAG,MAAK;AACxBhB,IAAAA,QAAQ,GAAE,IAAV;AACD,GAFD;;AAIA,SACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCH,SAAS,IAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAL,CADf,EAEC,CAACA,SAAD,IAAcF,SAAd,IAA2B,oBAAC,gBAAD;AAAkB,IAAA,GAAG,EAAIA,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAF5B,CADF;AAMD,CAxCC;;AA6CF,eAAeJ,WAAf","sourcesContent":["import React,{useState,useEffect} from 'react';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { useParams } from 'react-router-dom';\nimport Button from '../../shared/components/FormElements/Button';\nimport Card from '../../shared/components/UIElements/Card';\nimport MovieDescription from'./MovieDescription';\n\n  const Description = props => {\n  let movieid = useParams().movieId;\n  const [LoadedDes, setLoadedDes] = useState();\n  const [isLoading,setisLoading] = useState(false);\n  const [error, setError] = useState();\n  const [Loadedshowtimes,setLoadedshowtimes] = useState();\n  useEffect(() => {\n     const fetchDes = async () => {\n      setisLoading(true);\n      try{          \n        console.log(movieid);\n        console.log(movieid);\n        const response= await fetch(`http://localhost:5000/api/movies/${movieid}`); \n        const responseData = await response.json();\n        console.log(responseData)\n        if(!response.ok){\n          console.log(responseData)\n          throw new Error(responseData.message);\n        }\n        setLoadedDes(responseData.movie);\n        setLoadedshowtimes(responseData.showtimes);\n        \n      } catch (err) {\n        setError(err.message);\n      }\n      setisLoading(false);\n    };\n\n    fetchDes();\n  },[movieid]);\n  const errorHandler = () =>{\n    setError=(null);\n  }\n \n  return (\n    <React.Fragment>\n    {isLoading && (<div><LoadingSpinner /></div>)}\n    {!isLoading && LoadedDes && <MovieDescription des = {LoadedDes}/>}\n    </React.Fragment>)\n\n};\n\n\n\n\nexport default Description;"]},"metadata":{},"sourceType":"module"}