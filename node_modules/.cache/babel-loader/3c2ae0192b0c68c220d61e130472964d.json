{"ast":null,"code":"import React from 'react';\nimport PerformanceItem from './PerformanceItem';\nimport { differenceInCalendarMonths } from 'date-fns';\n\nconst Calculate = props => {\n  let dict = {};\n  props.items.map(item => {\n    if (!dict.hasOwnProperty(item.userid)) {\n      dict[item.userid].push({\n        name: item.name,\n        time: [],\n        status: []\n      });\n    }\n\n    console.log(dict); //date has to be in range 5 days\n\n    var datetime = item.time;\n    var date = item.time.split(' ');\n    console.log(date[0]);\n    dict[item.userid][time].push(datetime);\n    dict[item.userid][status].push(item.status);\n  });\n  return \"Caculate\";\n};\n\nexport default Calculate;","map":{"version":3,"sources":["/Users/liwentian/Desktop/intern/slackapp/src/performance/components/Calculate.js"],"names":["React","PerformanceItem","differenceInCalendarMonths","Calculate","props","dict","items","map","item","hasOwnProperty","userid","push","name","time","status","console","log","datetime","date","split"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAASC,0BAAT,QAA2C,UAA3C;;AAIA,MAAMC,SAAS,GAAGC,KAAK,IAAI;AACvB,MAAIC,IAAI,GAAG,EAAX;AACAD,EAAAA,KAAK,CAACE,KAAN,CAAYC,GAAZ,CAAgBC,IAAI,IAAE;AAClB,QAAG,CAACH,IAAI,CAACI,cAAL,CAAoBD,IAAI,CAACE,MAAzB,CAAJ,EAAqC;AACjCL,MAAAA,IAAI,CAACG,IAAI,CAACE,MAAN,CAAJ,CAAkBC,IAAlB,CAAuB;AAACC,QAAAA,IAAI,EAACJ,IAAI,CAACI,IAAX;AAAgBC,QAAAA,IAAI,EAAC,EAArB;AAAwBC,QAAAA,MAAM,EAAC;AAA/B,OAAvB;AACH;;AACDC,IAAAA,OAAO,CAACC,GAAR,CAAYX,IAAZ,EAJkB,CAKlB;;AACA,QAAIY,QAAQ,GAAGT,IAAI,CAACK,IAApB;AACA,QAAIK,IAAI,GAAGV,IAAI,CAACK,IAAL,CAAUM,KAAV,CAAgB,GAAhB,CAAX;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAYE,IAAI,CAAC,CAAD,CAAhB;AACAb,IAAAA,IAAI,CAACG,IAAI,CAACE,MAAN,CAAJ,CAAkBG,IAAlB,EAAwBF,IAAxB,CAA6BM,QAA7B;AACAZ,IAAAA,IAAI,CAACG,IAAI,CAACE,MAAN,CAAJ,CAAkBI,MAAlB,EAA0BH,IAA1B,CAA+BH,IAAI,CAACM,MAApC;AACH,GAXD;AAaF,SACI,UADJ;AAGD,CAlBD;;AAoBA,eAAeX,SAAf","sourcesContent":["import React from 'react';\n\nimport PerformanceItem from './PerformanceItem';\nimport { differenceInCalendarMonths } from 'date-fns';\n\n\n\nconst Calculate = props => {\n    let dict = {};\n    props.items.map(item=>{\n        if(!dict.hasOwnProperty(item.userid)){\n            dict[item.userid].push({name:item.name,time:[],status:[]});\n        }\n        console.log(dict);\n        //date has to be in range 5 days\n        var datetime = item.time;\n        var date = item.time.split(' ');      \n        console.log(date[0]);\n        dict[item.userid][time].push(datetime);\n        dict[item.userid][status].push(item.status);\n    })\n    \n  return (\n      \"Caculate\"\n  )\n};\n\nexport default Calculate;\n"]},"metadata":{},"sourceType":"module"}