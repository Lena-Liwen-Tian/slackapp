{"ast":null,"code":"var _jsxFileName = \"/Users/liwentian/Desktop/PumpkinMovie1/frontend/src/showtimes/pages/ShowTime.js\";\nimport React, { useEffect, useState } from 'react';\nimport ShowTimeList from '../components/ShowTimeList';\nimport { useParams } from 'react-router-dom';\nimport Calendar from '../components/calendar';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport axios from 'axios';\n\nconst ShowTime = props => {\n  const timeid = useParams().timeid;\n  const [LoadedShowtimes, setLoadedShowtimes] = useState();\n  const [isLoading, setisLoading] = useState(false);\n  const [error, setError] = useState();\n  useEffect(() => {\n    const fetchShowtimes = async () => {\n      setisLoading(true);\n\n      try {\n        const response = await fetch('http://localhost:5000/api/showtimes/${timeid}');\n        const responseData = await response.json();\n\n        if (!response.ok) {\n          throw new Error(responseData.message);\n        }\n\n        setLoadedShowtimes(responseData.showtimes);\n      } catch (err) {\n        setError(err.message);\n      }\n\n      setisLoading(false);\n    };\n\n    fetchShowtimes();\n  }, [timeid]);\n\n  const errorHandler = () => {\n    setError = null;\n  };\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(Calendar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), isLoading && React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(LoadingSpinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  })), !isLoading && LoadedShowtimes && React.createElement(ShowTimeList, {\n    items: LoadedShowtimes,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }));\n};\n\nexport default ShowTime;","map":{"version":3,"sources":["/Users/liwentian/Desktop/PumpkinMovie1/frontend/src/showtimes/pages/ShowTime.js"],"names":["React","useEffect","useState","ShowTimeList","useParams","Calendar","useHttpClient","LoadingSpinner","axios","ShowTime","props","timeid","LoadedShowtimes","setLoadedShowtimes","isLoading","setisLoading","error","setError","fetchShowtimes","response","fetch","responseData","json","ok","Error","message","showtimes","err","errorHandler"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,aAAT,QAA8B,8BAA9B;AACA,OAAOC,cAAP,MAA2B,mDAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEI,MAAMC,QAAQ,GAAGC,KAAK,IAAI;AACxB,QAAMC,MAAM,GAAGP,SAAS,GAAGO,MAA3B;AACA,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCX,QAAQ,EAAtD;AACA,QAAM,CAACY,SAAD,EAAWC,YAAX,IAA2Bb,QAAQ,CAAC,KAAD,CAAzC;AACA,QAAM,CAACc,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,EAAlC;AACAD,EAAAA,SAAS,CAAC,MAAM;AAEb,UAAMiB,cAAc,GAAG,YAAY;AAClCH,MAAAA,YAAY,CAAC,IAAD,CAAZ;;AACA,UAAG;AACD,cAAMI,QAAQ,GAAE,MAAMC,KAAK,CAAC,+CAAD,CAA3B;AACA,cAAMC,YAAY,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAA3B;;AACA,YAAG,CAACH,QAAQ,CAACI,EAAb,EAAgB;AACd,gBAAM,IAAIC,KAAJ,CAAUH,YAAY,CAACI,OAAvB,CAAN;AACD;;AACDZ,QAAAA,kBAAkB,CAACQ,YAAY,CAACK,SAAd,CAAlB;AAED,OARD,CAQE,OAAOC,GAAP,EAAY;AACZV,QAAAA,QAAQ,CAACU,GAAG,CAACF,OAAL,CAAR;AACD;;AACDV,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAdA;;AAgBDG,IAAAA,cAAc;AACf,GAnBQ,EAmBP,CAACP,MAAD,CAnBO,CAAT;;AAoBA,QAAMiB,YAAY,GAAG,MAAK;AACxBX,IAAAA,QAAQ,GAAE,IAAV;AACD,GAFD;;AAIA,SACA,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGH,SAAS,IAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACb,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADa,CAFjB,EAKC,CAACA,SAAD,IAAcF,eAAd,IAAgC,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAEA,eAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALjC,CADA;AAQL,CArCG;;AAyCJ,eAAeH,QAAf","sourcesContent":["import React, { useEffect,useState } from 'react';\nimport ShowTimeList from '../components/ShowTimeList';\nimport { useParams } from 'react-router-dom';\nimport Calendar from '../components/calendar';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport axios from 'axios';\n    \n    const ShowTime = props => {\n      const timeid = useParams().timeid;\n      const [LoadedShowtimes, setLoadedShowtimes] = useState();\n      const [isLoading,setisLoading] = useState(false);\n      const [error, setError] = useState();\n      useEffect(() => {\n        \n         const fetchShowtimes = async () => {\n          setisLoading(true);\n          try{          \n            const response= await fetch('http://localhost:5000/api/showtimes/${timeid}'); \n            const responseData = await response.json();\n            if(!response.ok){\n              throw new Error(responseData.message);\n            }\n            setLoadedShowtimes(responseData.showtimes);\n            \n          } catch (err) {\n            setError(err.message);\n          }\n          setisLoading(false);\n        };\n\n        fetchShowtimes();\n      },[timeid]);\n      const errorHandler = () =>{\n        setError=(null);\n      }\n     \n      return (        \n      <React.Fragment>\n        <Calendar />\n        {isLoading && (<div>\n          <LoadingSpinner />\n        </div>)}  \n      {!isLoading && LoadedShowtimes &&<ShowTimeList items={LoadedShowtimes}/>}\n      </React.Fragment>);\n};\n\n\n\nexport default ShowTime;"]},"metadata":{},"sourceType":"module"}