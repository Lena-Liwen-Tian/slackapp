{"ast":null,"code":"var _jsxFileName = \"/Users/liwentian/Desktop/PumpkinMovie1/frontend/src/movies/pages/Description.js\";\nimport { React, useState, useEffect } from 'react';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { useParams } from 'react-router-dom';\nimport Button from '../../shared/components/FormElements/Button';\nimport Card from '../../shared/components/UIElements/Card';\nimport MovieDescription from './MovieDescription';\n\nconst Description = props => {\n  let movieid = useParams().movieId;\n  console.log(movieid);\n  const [LoadedDes, setLoadedDes] = useState();\n  const [isLoading, setisLoading] = useState(false);\n  const [error, setError] = useState();\n  useEffect(() => {\n    const fetchDes = async () => {\n      setisLoading(true);\n\n      try {\n        const response = await fetch(`http://localhost:5000/api/movies/${movieid}`);\n        const responseData = await response.json();\n        console.log(responseData);\n\n        if (!response.ok) {\n          console.log(responseData);\n          throw new Error(responseData.message);\n        }\n\n        setLoadedDes(responseData.movie);\n      } catch (err) {\n        setError(err.message);\n      }\n\n      setisLoading(false);\n    };\n\n    fetchDes();\n  }, [movieid]);\n\n  const errorHandler = () => {\n    setError = null;\n  };\n\n  return React.createElement(MovieDescription, {\n    name: LoadedDes.Title,\n    image: LoadedDes.Poster,\n    length: LoadedDes.Runtime,\n    rating: LoadedDes.Rated,\n    genre: LoadedDes.Genre,\n    description: LoadedDes.Plot,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  });\n};\n\nexport default Description;","map":{"version":3,"sources":["/Users/liwentian/Desktop/PumpkinMovie1/frontend/src/movies/pages/Description.js"],"names":["React","useState","useEffect","useHttpClient","LoadingSpinner","useParams","Button","Card","MovieDescription","Description","props","movieid","movieId","console","log","LoadedDes","setLoadedDes","isLoading","setisLoading","error","setError","fetchDes","response","fetch","responseData","json","ok","Error","message","movie","err","errorHandler","Title","Poster","Runtime","Rated","Genre","Plot"],"mappings":";AAAA,SAAQA,KAAR,EAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,SAASC,aAAT,QAA8B,8BAA9B;AACA,OAAOC,cAAP,MAA2B,mDAA3B;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,MAAP,MAAmB,6CAAnB;AACA,OAAOC,IAAP,MAAiB,yCAAjB;AACA,OAAOC,gBAAP,MAA4B,oBAA5B;;AAEE,MAAMC,WAAW,GAAGC,KAAK,IAAI;AAC7B,MAAIC,OAAO,GAAGN,SAAS,GAAGO,OAA1B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AACA,QAAM,CAACI,SAAD,EAAYC,YAAZ,IAA4Bf,QAAQ,EAA1C;AACA,QAAM,CAACgB,SAAD,EAAWC,YAAX,IAA2BjB,QAAQ,CAAC,KAAD,CAAzC;AACA,QAAM,CAACkB,KAAD,EAAQC,QAAR,IAAoBnB,QAAQ,EAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AAEb,UAAMmB,QAAQ,GAAG,YAAY;AAC5BH,MAAAA,YAAY,CAAC,IAAD,CAAZ;;AACA,UAAG;AACD,cAAMI,QAAQ,GAAE,MAAMC,KAAK,CAAE,oCAAmCZ,OAAQ,EAA7C,CAA3B;AACA,cAAMa,YAAY,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAA3B;AACAZ,QAAAA,OAAO,CAACC,GAAR,CAAYU,YAAZ;;AACA,YAAG,CAACF,QAAQ,CAACI,EAAb,EAAgB;AACdb,UAAAA,OAAO,CAACC,GAAR,CAAYU,YAAZ;AACA,gBAAM,IAAIG,KAAJ,CAAUH,YAAY,CAACI,OAAvB,CAAN;AACD;;AACDZ,QAAAA,YAAY,CAACQ,YAAY,CAACK,KAAd,CAAZ;AAED,OAVD,CAUE,OAAOC,GAAP,EAAY;AACZV,QAAAA,QAAQ,CAACU,GAAG,CAACF,OAAL,CAAR;AACD;;AACDV,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAhBA;;AAkBDG,IAAAA,QAAQ;AACT,GArBQ,EAqBP,CAACV,OAAD,CArBO,CAAT;;AAsBA,QAAMoB,YAAY,GAAG,MAAK;AACxBX,IAAAA,QAAQ,GAAE,IAAV;AACD,GAFD;;AAIA,SACA,oBAAC,gBAAD;AACA,IAAA,IAAI,EAAIL,SAAS,CAACiB,KADlB;AAEA,IAAA,KAAK,EAAEjB,SAAS,CAACkB,MAFjB;AAGA,IAAA,MAAM,EAAIlB,SAAS,CAACmB,OAHpB;AAIA,IAAA,MAAM,EAAEnB,SAAS,CAACoB,KAJlB;AAKA,IAAA,KAAK,EAAEpB,SAAS,CAACqB,KALjB;AAMA,IAAA,WAAW,EAAErB,SAAS,CAACsB,IANvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA;AAUD,CA3CC;;AA8CF,eAAe5B,WAAf","sourcesContent":["import {React,useState,useEffect} from 'react';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { useParams } from 'react-router-dom';\nimport Button from '../../shared/components/FormElements/Button';\nimport Card from '../../shared/components/UIElements/Card';\nimport MovieDescription from'./MovieDescription';\n\n  const Description = props => {\n  let movieid = useParams().movieId;\n  console.log(movieid);\n  const [LoadedDes, setLoadedDes] = useState();\n  const [isLoading,setisLoading] = useState(false);\n  const [error, setError] = useState();\n\n  useEffect(() => {\n \n     const fetchDes = async () => {\n      setisLoading(true);\n      try{          \n        const response= await fetch(`http://localhost:5000/api/movies/${movieid}`); \n        const responseData = await response.json();\n        console.log(responseData)\n        if(!response.ok){\n          console.log(responseData)\n          throw new Error(responseData.message);\n        }\n        setLoadedDes(responseData.movie);\n        \n      } catch (err) {\n        setError(err.message);\n      }\n      setisLoading(false);\n    };\n\n    fetchDes();\n  },[movieid]);\n  const errorHandler = () =>{\n    setError=(null);\n  }\n \n  return (\n  <MovieDescription \n  name = {LoadedDes.Title} \n  image={LoadedDes.Poster}\n  length = {LoadedDes.Runtime}\n  rating={LoadedDes.Rated}\n  genre={LoadedDes.Genre}\n  description={LoadedDes.Plot}/>)\n\n\n};\n\n\nexport default Description;"]},"metadata":{},"sourceType":"module"}