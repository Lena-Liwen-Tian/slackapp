{"ast":null,"code":"import _regeneratorRuntime from\"/Users/liwentian/Dropbox/PumpkinMovie1/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/liwentian/Dropbox/PumpkinMovie1/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/liwentian/Dropbox/PumpkinMovie1/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _readOnlyError from\"/Users/liwentian/Dropbox/PumpkinMovie1/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/readOnlyError\";import React,{useState,useEffect}from'react';import{useHttpClient}from'../../shared/hooks/http-hook';import LoadingSpinner from'../../shared/components/UIElements/LoadingSpinner';import{useParams}from'react-router-dom';import Button from'../../shared/components/FormElements/Button';import Card from'../../shared/components/UIElements/Card';import MovieDescription from'./MovieDescription';var Description=function Description(props){var movieid=useParams().movieId;var _useState=useState(),_useState2=_slicedToArray(_useState,2),LoadedDes=_useState2[0],setLoadedDes=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isLoading=_useState4[0],setisLoading=_useState4[1];var _useState5=useState(),_useState6=_slicedToArray(_useState5,2),error=_useState6[0],setError=_useState6[1];var _useState7=useState(),_useState8=_slicedToArray(_useState7,2),Loadedshowtimes=_useState8[0],setLoadedshowtimes=_useState8[1];useEffect(function(){var fetchDes=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response,responseData;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setisLoading(true);_context.prev=1;console.log(movieid);console.log(movieid);_context.next=6;return fetch(process.env.REACT_APP_BACKEND_URL+\"/movies/\".concat(movieid));case 6:response=_context.sent;_context.next=9;return response.json();case 9:responseData=_context.sent;console.log(responseData);if(response.ok){_context.next=14;break;}console.log(responseData);throw new Error(responseData.message);case 14:setLoadedDes(responseData.movie);setLoadedshowtimes(responseData.showtimes);_context.next=21;break;case 18:_context.prev=18;_context.t0=_context[\"catch\"](1);setError(_context.t0.message);case 21:setisLoading(false);case 22:case\"end\":return _context.stop();}}},_callee,null,[[1,18]]);}));return function fetchDes(){return _ref.apply(this,arguments);};}();fetchDes();},[movieid]);var errorHandler=function errorHandler(){setError=(_readOnlyError(\"setError\"),null);};return React.createElement(React.Fragment,null,isLoading&&React.createElement(\"div\",null,React.createElement(LoadingSpinner,null)),!isLoading&&LoadedDes&&React.createElement(MovieDescription,{showtimes:Loadedshowtimes,des:LoadedDes}));};export default Description;","map":{"version":3,"sources":["/Users/liwentian/Dropbox/PumpkinMovie1/frontend/src/movies/pages/Description.js"],"names":["React","useState","useEffect","useHttpClient","LoadingSpinner","useParams","Button","Card","MovieDescription","Description","props","movieid","movieId","LoadedDes","setLoadedDes","isLoading","setisLoading","error","setError","Loadedshowtimes","setLoadedshowtimes","fetchDes","console","log","fetch","process","env","REACT_APP_BACKEND_URL","response","json","responseData","ok","Error","message","movie","showtimes","errorHandler"],"mappings":"qpBAAA,MAAOA,CAAAA,KAAP,EAAcC,QAAd,CAAuBC,SAAvB,KAAuC,OAAvC,CACA,OAASC,aAAT,KAA8B,8BAA9B,CACA,MAAOC,CAAAA,cAAP,KAA2B,mDAA3B,CACA,OAASC,SAAT,KAA0B,kBAA1B,CACA,MAAOC,CAAAA,MAAP,KAAmB,6CAAnB,CACA,MAAOC,CAAAA,IAAP,KAAiB,yCAAjB,CACA,MAAOC,CAAAA,gBAAP,KAA4B,oBAA5B,CAEE,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAAAC,KAAK,CAAI,CAC7B,GAAIC,CAAAA,OAAO,CAAGN,SAAS,GAAGO,OAA1B,CAD6B,cAEKX,QAAQ,EAFb,wCAEtBY,SAFsB,eAEXC,YAFW,8BAGIb,QAAQ,CAAC,KAAD,CAHZ,yCAGtBc,SAHsB,eAGZC,YAHY,8BAIHf,QAAQ,EAJL,yCAItBgB,KAJsB,eAIfC,QAJe,8BAKgBjB,QAAQ,EALxB,yCAKtBkB,eALsB,eAKNC,kBALM,eAM7BlB,SAAS,CAAC,UAAM,CACb,GAAMmB,CAAAA,QAAQ,0FAAG,6JAChBL,YAAY,CAAC,IAAD,CAAZ,CADgB,gBAGdM,OAAO,CAACC,GAAR,CAAYZ,OAAZ,EACAW,OAAO,CAACC,GAAR,CAAYZ,OAAZ,EAJc,sBAKQa,CAAAA,KAAK,CAACC,OAAO,CAACC,GAAR,CAAYC,qBAAZ,mBAA6ChB,OAA7C,CAAD,CALb,QAKRiB,QALQ,qCAMaA,CAAAA,QAAQ,CAACC,IAAT,EANb,QAMRC,YANQ,eAOdR,OAAO,CAACC,GAAR,CAAYO,YAAZ,EAPc,GAQVF,QAAQ,CAACG,EARC,0BASZT,OAAO,CAACC,GAAR,CAAYO,YAAZ,EATY,KAUN,IAAIE,CAAAA,KAAJ,CAAUF,YAAY,CAACG,OAAvB,CAVM,SAYdnB,YAAY,CAACgB,YAAY,CAACI,KAAd,CAAZ,CACAd,kBAAkB,CAACU,YAAY,CAACK,SAAd,CAAlB,CAbc,iFAgBdjB,QAAQ,CAAC,YAAIe,OAAL,CAAR,CAhBc,QAkBhBjB,YAAY,CAAC,KAAD,CAAZ,CAlBgB,qEAAH,kBAARK,CAAAA,QAAQ,0CAAd,CAqBDA,QAAQ,GACT,CAvBQ,CAuBP,CAACV,OAAD,CAvBO,CAAT,CAwBA,GAAMyB,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAK,CACxBlB,QAAQ,6BAAE,IAAF,CAAR,CACD,CAFD,CAIA,MACE,qBAAC,KAAD,CAAO,QAAP,MACCH,SAAS,EAAK,+BAAK,oBAAC,cAAD,MAAL,CADf,CAEC,CAACA,SAAD,EAAcF,SAAd,EAA2B,oBAAC,gBAAD,EAAkB,SAAS,CAAEM,eAA7B,CAA8C,GAAG,CAAIN,SAArD,EAF5B,CADF,CAMD,CAxCC,CA6CF,cAAeJ,CAAAA,WAAf","sourcesContent":["import React,{useState,useEffect} from 'react';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { useParams } from 'react-router-dom';\nimport Button from '../../shared/components/FormElements/Button';\nimport Card from '../../shared/components/UIElements/Card';\nimport MovieDescription from'./MovieDescription';\n\n  const Description = props => {\n  let movieid = useParams().movieId;\n  const [LoadedDes, setLoadedDes] = useState();\n  const [isLoading,setisLoading] = useState(false);\n  const [error, setError] = useState();\n  const [Loadedshowtimes,setLoadedshowtimes] = useState();\n  useEffect(() => {\n     const fetchDes = async () => {\n      setisLoading(true);\n      try{          \n        console.log(movieid);\n        console.log(movieid);\n        const response= await fetch(process.env.REACT_APP_BACKEND_URL+`/movies/${movieid}`); \n        const responseData = await response.json();\n        console.log(responseData)\n        if(!response.ok){\n          console.log(responseData)\n          throw new Error(responseData.message);\n        }\n        setLoadedDes(responseData.movie);\n        setLoadedshowtimes(responseData.showtimes);\n        \n      } catch (err) {\n        setError(err.message);\n      }\n      setisLoading(false);\n    };\n\n    fetchDes();\n  },[movieid]);\n  const errorHandler = () =>{\n    setError=(null);\n  }\n \n  return (\n    <React.Fragment>\n    {isLoading && (<div><LoadingSpinner /></div>)}\n    {!isLoading && LoadedDes && <MovieDescription showtimes={Loadedshowtimes} des = {LoadedDes}/>}\n    </React.Fragment>)\n\n};\n\n\n\n\nexport default Description;"]},"metadata":{},"sourceType":"module"}