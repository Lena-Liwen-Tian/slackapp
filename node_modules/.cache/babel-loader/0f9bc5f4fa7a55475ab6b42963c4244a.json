{"ast":null,"code":"var _jsxFileName = \"/Users/liwentian/Desktop/intern/slackapp/src/performance/components/Calculate.js\";\nimport React from 'react';\nimport PerformanceItem from './PerformanceItem';\nimport { differenceInCalendarMonths } from 'date-fns';\n\nconst Calculate = props => {\n  let dict = {};\n  var last = new Date(new Date().getTime() - (4 * 24 * 60 * 60 * 1000 + 11 * 60 * 60 * 1000));\n  props.items.map(item => {\n    if (!dict.hasOwnProperty(item.userid)) {\n      dict[item.userid] = {\n        \"name\": item.name,\n        \"status\": [],\n        \"time\": [],\n        \"totaltime\": \"\"\n      };\n    } //date has to be in range 5 days\n\n\n    var datetime = item.time;\n    var d = new Date(datetime); // console.log(last);\n\n    if (d.getTime() >= last.getTime()) {\n      // console.log(d);\n      //compare the first active and the first away\n      //active < away ->  away - active\n      //active > away -> away - start + (one more away - start) \n      if (dict[item.userid].status.length >= 1 && item.status == dict[item.userid].status[dict[item.userid].status.length - 1]) {\n        dict[item.userid].time[dict[item.userid].time - 1] = d;\n      } else {\n        dict[item.userid].status.push(item.status);\n        dict[item.userid].time.push(d);\n      } // dict[item.userid].status.push(item.status);\n      // dict\n      // if(item.status == \"away\"){\n      //     dict[item.userid].away.push(d);\n      // }else if(item.status == \"active\"){\n      //     dict[item.userid].active.push(d);\n      // }\n\n    }\n  }); //go through the dict again and calculate the total time\n\n  Object.keys(dict).forEach(function (key) {\n    var away = dict[key].away;\n    var active = dict[key].active;\n\n    if (away.length == 0 || active.length == 0) {\n      if (away.length != 0) {\n        dict[key].totaltime = \"always away\";\n      } else if (active.length != 0) {\n        dict[key].totaltime = \"always active\";\n      }\n    } else if (active[0].getTime() < away[0].getTime()) {\n      var activeindex = 0;\n      var awayindex = 0;\n      var totaltime = 0;\n\n      while (activeindex < active.length && awayindex < away.length) {\n        totaltime += away[awayindex].getTime() - active[activeindex].getTime();\n        awayindex++;\n        activeindex++;\n      }\n\n      if (activeindex < active.length) {\n        totaltime += new Date().getTime() - active[activeindex].getTime();\n      }\n\n      if (awayindex < away.length) {\n        totaltime += away[awayindex].getTime() - active[active.length - 1].getTime();\n      }\n\n      dict[key].totaltime = (totaltime / 3600000).toFixed(2).toString() + \"h\";\n    } else {\n      //active > away -> away - start + (one more away - start) \n      var totaltime = 0;\n      var activeindex = 0;\n      var awayindex = 1; //  console.log(away[0]);\n      //  console.log(last);\n      //  console.log(totaltime/3600000);\n\n      while (activeindex < active.length && awayindex < away.length) {\n        totaltime += away[awayindex].getTime() - active[activeindex].getTime(); // console.log(totaltime);\n\n        awayindex++;\n        activeindex++;\n      }\n\n      if (activeindex < active.length) {\n        totaltime += new Date().getTime() - active[activeindex].getTime();\n      }\n\n      if (awayindex < away.length) {\n        totaltime += away[awayindex].getTime() - active[active.length - 1].getTime();\n      } // console.log(totaltime);\n\n\n      dict[key].totaltime = (totaltime / 3600000).toFixed(2).toString() + \"h\";\n    }\n  }); // console.log(dict);\n\n  return Object.entries(dict).map(([key, value]) => React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \" \", value.name, \": \", value.totaltime));\n};\n\nexport default Calculate;","map":{"version":3,"sources":["/Users/liwentian/Desktop/intern/slackapp/src/performance/components/Calculate.js"],"names":["React","PerformanceItem","differenceInCalendarMonths","Calculate","props","dict","last","Date","getTime","items","map","item","hasOwnProperty","userid","name","datetime","time","d","status","length","push","Object","keys","forEach","key","away","active","totaltime","activeindex","awayindex","toFixed","toString","entries","value"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAASC,0BAAT,QAA2C,UAA3C;;AAIA,MAAMC,SAAS,GAAGC,KAAK,IAAI;AACvB,MAAIC,IAAI,GAAG,EAAX;AACA,MAAIC,IAAI,GAAG,IAAIC,IAAJ,CAAS,IAAIA,IAAJ,GAAWC,OAAX,MAAwB,IAAI,EAAJ,GAAS,EAAT,GAAc,EAAd,GAAmB,IAAnB,GAA0B,KAAK,EAAL,GAAU,EAAV,GAAe,IAAjE,CAAT,CAAX;AACAJ,EAAAA,KAAK,CAACK,KAAN,CAAYC,GAAZ,CAAgBC,IAAI,IAAE;AAClB,QAAG,CAACN,IAAI,CAACO,cAAL,CAAoBD,IAAI,CAACE,MAAzB,CAAJ,EAAqC;AACjCR,MAAAA,IAAI,CAACM,IAAI,CAACE,MAAN,CAAJ,GAAoB;AAAC,gBAAOF,IAAI,CAACG,IAAb;AAAkB,kBAAS,EAA3B;AAA8B,gBAAO,EAArC;AAAwC,qBAAY;AAApD,OAApB;AACH,KAHiB,CAKlB;;;AAEA,QAAIC,QAAQ,GAAGJ,IAAI,CAACK,IAApB;AAEA,QAAIC,CAAC,GAAG,IAAIV,IAAJ,CAASQ,QAAT,CAAR,CATkB,CAUlB;;AACA,QAAGE,CAAC,CAACT,OAAF,MAAeF,IAAI,CAACE,OAAL,EAAlB,EAAiC;AAC7B;AACA;AACA;AACA;AACA,UAAGH,IAAI,CAACM,IAAI,CAACE,MAAN,CAAJ,CAAkBK,MAAlB,CAAyBC,MAAzB,IAAmC,CAAnC,IAAwCR,IAAI,CAACO,MAAL,IAAeb,IAAI,CAACM,IAAI,CAACE,MAAN,CAAJ,CAAkBK,MAAlB,CAAyBb,IAAI,CAACM,IAAI,CAACE,MAAN,CAAJ,CAAkBK,MAAlB,CAAyBC,MAAzB,GAAgC,CAAzD,CAA1D,EAAsH;AAClHd,QAAAA,IAAI,CAACM,IAAI,CAACE,MAAN,CAAJ,CAAkBG,IAAlB,CAAuBX,IAAI,CAACM,IAAI,CAACE,MAAN,CAAJ,CAAkBG,IAAlB,GAAuB,CAA9C,IAAmDC,CAAnD;AACH,OAFD,MAEK;AACDZ,QAAAA,IAAI,CAACM,IAAI,CAACE,MAAN,CAAJ,CAAkBK,MAAlB,CAAyBE,IAAzB,CAA8BT,IAAI,CAACO,MAAnC;AACAb,QAAAA,IAAI,CAACM,IAAI,CAACE,MAAN,CAAJ,CAAkBG,IAAlB,CAAuBI,IAAvB,CAA4BH,CAA5B;AACH,OAV4B,CAW7B;AACA;AACA;AACA;AACA;AACA;AACA;;AACH;AAGJ,GAhCD,EAHuB,CAoCvB;;AACAI,EAAAA,MAAM,CAACC,IAAP,CAAYjB,IAAZ,EAAkBkB,OAAlB,CAA0B,UAASC,GAAT,EAAc;AACpC,QAAIC,IAAI,GAAGpB,IAAI,CAACmB,GAAD,CAAJ,CAAUC,IAArB;AACA,QAAIC,MAAM,GAAGrB,IAAI,CAACmB,GAAD,CAAJ,CAAUE,MAAvB;;AACA,QAAGD,IAAI,CAACN,MAAL,IAAe,CAAf,IAAoBO,MAAM,CAACP,MAAP,IAAiB,CAAxC,EAA0C;AACtC,UAAGM,IAAI,CAACN,MAAL,IAAa,CAAhB,EAAkB;AACdd,QAAAA,IAAI,CAACmB,GAAD,CAAJ,CAAUG,SAAV,GAAsB,aAAtB;AACH,OAFD,MAEM,IAAGD,MAAM,CAACP,MAAP,IAAe,CAAlB,EAAoB;AACtBd,QAAAA,IAAI,CAACmB,GAAD,CAAJ,CAAUG,SAAV,GAAsB,eAAtB;AACH;AAEJ,KAPD,MAOM,IAAID,MAAM,CAAC,CAAD,CAAN,CAAUlB,OAAV,KAAsBiB,IAAI,CAAC,CAAD,CAAJ,CAAQjB,OAAR,EAA1B,EAA4C;AAC9C,UAAIoB,WAAW,GAAG,CAAlB;AACA,UAAIC,SAAS,GAAG,CAAhB;AACA,UAAIF,SAAS,GAAG,CAAhB;;AACA,aAAMC,WAAW,GAAGF,MAAM,CAACP,MAArB,IAA+BU,SAAS,GAAGJ,IAAI,CAACN,MAAtD,EAA6D;AACzDQ,QAAAA,SAAS,IAAGF,IAAI,CAACI,SAAD,CAAJ,CAAgBrB,OAAhB,KAA4BkB,MAAM,CAACE,WAAD,CAAN,CAAoBpB,OAApB,EAAxC;AACAqB,QAAAA,SAAS;AACTD,QAAAA,WAAW;AACd;;AACF,UAAGA,WAAW,GAAGF,MAAM,CAACP,MAAxB,EAA+B;AAC3BQ,QAAAA,SAAS,IAAI,IAAIpB,IAAJ,GAAWC,OAAX,KAAuBkB,MAAM,CAACE,WAAD,CAAN,CAAoBpB,OAApB,EAApC;AACH;;AACD,UAAGqB,SAAS,GAAGJ,IAAI,CAACN,MAApB,EAA2B;AACvBQ,QAAAA,SAAS,IAAIF,IAAI,CAACI,SAAD,CAAJ,CAAgBrB,OAAhB,KAA4BkB,MAAM,CAACA,MAAM,CAACP,MAAP,GAAc,CAAf,CAAN,CAAwBX,OAAxB,EAAzC;AACH;;AACDH,MAAAA,IAAI,CAACmB,GAAD,CAAJ,CAAUG,SAAV,GAAsB,CAACA,SAAS,GAAG,OAAb,EAAsBG,OAAtB,CAA8B,CAA9B,EAAiCC,QAAjC,KAA8C,GAApE;AACF,KAhBK,MAgBD;AACA;AACA,UAAIJ,SAAS,GAAG,CAAhB;AACA,UAAIC,WAAW,GAAG,CAAlB;AACA,UAAIC,SAAS,GAAG,CAAhB,CAJA,CAKD;AACA;AACA;;AACC,aAAMD,WAAW,GAAGF,MAAM,CAACP,MAArB,IAA+BU,SAAS,GAAGJ,IAAI,CAACN,MAAtD,EAA6D;AAC1DQ,QAAAA,SAAS,IAAGF,IAAI,CAACI,SAAD,CAAJ,CAAgBrB,OAAhB,KAA4BkB,MAAM,CAACE,WAAD,CAAN,CAAoBpB,OAApB,EAAxC,CAD0D,CAE1D;;AACAqB,QAAAA,SAAS;AACTD,QAAAA,WAAW;AACb;;AACD,UAAGA,WAAW,GAAGF,MAAM,CAACP,MAAxB,EAA+B;AAC5BQ,QAAAA,SAAS,IAAI,IAAIpB,IAAJ,GAAWC,OAAX,KAAuBkB,MAAM,CAACE,WAAD,CAAN,CAAoBpB,OAApB,EAApC;AACH;;AACD,UAAGqB,SAAS,GAAGJ,IAAI,CAACN,MAApB,EAA2B;AACvBQ,QAAAA,SAAS,IAAIF,IAAI,CAACI,SAAD,CAAJ,CAAgBrB,OAAhB,KAA4BkB,MAAM,CAACA,MAAM,CAACP,MAAP,GAAc,CAAf,CAAN,CAAwBX,OAAxB,EAAzC;AACH,OAnBA,CAoBD;;;AACAH,MAAAA,IAAI,CAACmB,GAAD,CAAJ,CAAUG,SAAV,GAAsB,CAACA,SAAS,GAAG,OAAb,EAAsBG,OAAtB,CAA8B,CAA9B,EAAiCC,QAAjC,KAA8C,GAApE;AACH;AACJ,GAjDD,EArCuB,CAuFvB;;AAGF,SACGV,MAAM,CAACW,OAAP,CAAe3B,IAAf,EAAqBK,GAArB,CAA0B,CAAC,CAACc,GAAD,EAAMS,KAAN,CAAD,KAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAKA,KAAK,CAACnB,IAAX,QAAmBmB,KAAK,CAACN,SAAzB,CAA5C,CADH;AAGD,CA7FD;;AA+FA,eAAexB,SAAf","sourcesContent":["import React from 'react';\n\nimport PerformanceItem from './PerformanceItem';\nimport { differenceInCalendarMonths } from 'date-fns';\n\n\n\nconst Calculate = props => {\n    let dict = {};\n    var last = new Date(new Date().getTime() - (4 * 24 * 60 * 60 * 1000 + 11 * 60 * 60 * 1000));\n    props.items.map(item=>{\n        if(!dict.hasOwnProperty(item.userid)){\n            dict[item.userid] = {\"name\":item.name,\"status\":[],\"time\":[],\"totaltime\":\"\"};\n        }\n        \n        //date has to be in range 5 days\n\n        var datetime = item.time;\n\n        var d = new Date(datetime);\n        // console.log(last);\n        if(d.getTime() >= last.getTime()){\n            // console.log(d);\n            //compare the first active and the first away\n            //active < away ->  away - active\n            //active > away -> away - start + (one more away - start) \n            if(dict[item.userid].status.length >= 1 && item.status == dict[item.userid].status[dict[item.userid].status.length-1]){\n                dict[item.userid].time[dict[item.userid].time-1] = d;\n            }else{\n                dict[item.userid].status.push(item.status);\n                dict[item.userid].time.push(d);\n            }\n            // dict[item.userid].status.push(item.status);\n            // dict\n            // if(item.status == \"away\"){\n            //     dict[item.userid].away.push(d);\n            // }else if(item.status == \"active\"){\n            //     dict[item.userid].active.push(d);\n            // }\n        }\n      \n       \n    })\n    //go through the dict again and calculate the total time\n    Object.keys(dict).forEach(function(key) {\n        var away = dict[key].away;\n        var active = dict[key].active;\n        if(away.length == 0 || active.length == 0){\n            if(away.length!=0){\n                dict[key].totaltime = \"always away\";\n            }else if(active.length!=0){\n                dict[key].totaltime = \"always active\";\n            }\n\n        }else if (active[0].getTime() < away[0].getTime()){\n            var activeindex = 0;\n            var awayindex = 0;\n            var totaltime = 0;\n            while(activeindex < active.length && awayindex < away.length){\n                totaltime+= away[awayindex].getTime() - active[activeindex].getTime();\n                awayindex++;\n                activeindex++;\n            }\n           if(activeindex < active.length){\n               totaltime += new Date().getTime() - active[activeindex].getTime();\n           }\n           if(awayindex < away.length){\n               totaltime += away[awayindex].getTime() - active[active.length-1].getTime();\n           }\n           dict[key].totaltime = (totaltime / 3600000).toFixed(2).toString() + \"h\";\n        }else{\n             //active > away -> away - start + (one more away - start) \n             var totaltime = 0;\n             var activeindex = 0;\n             var awayindex = 1;\n            //  console.log(away[0]);\n            //  console.log(last);\n            //  console.log(totaltime/3600000);\n             while(activeindex < active.length && awayindex < away.length){\n                totaltime+= away[awayindex].getTime() - active[activeindex].getTime();\n                // console.log(totaltime);\n                awayindex++;\n                activeindex++;\n             }\n             if(activeindex < active.length){\n                totaltime += new Date().getTime() - active[activeindex].getTime();\n            }\n            if(awayindex < away.length){\n                totaltime += away[awayindex].getTime() - active[active.length-1].getTime();\n            }\n            // console.log(totaltime);\n            dict[key].totaltime = (totaltime / 3600000).toFixed(2).toString() + \"h\";\n        }             \n    });\n    // console.log(dict);\n\n    \n  return (\n     Object.entries(dict).map( ([key, value]) => <p> {value.name}: {value.totaltime}</p> )\n  ) \n};\n\nexport default Calculate;\n"]},"metadata":{},"sourceType":"module"}