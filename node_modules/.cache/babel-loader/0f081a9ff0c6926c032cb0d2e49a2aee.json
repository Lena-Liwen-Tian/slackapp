{"ast":null,"code":"var _jsxFileName = \"/Users/liwentian/Desktop/intern/slackapp/src/performance/components/Calculate.js\";\nimport React from 'react';\nimport PerformanceItem from './PerformanceItem';\nimport { differenceInCalendarMonths } from 'date-fns';\n\nconst Calculate = props => {\n  let dict = {};\n  props.items.map(item => {\n    if (!dict.hasOwnProperty(item.userid)) {\n      dict[item.userid] = {\n        \"name\": item.name,\n        \"away\": [],\n        \"active\": []\n      };\n    } //date has to be in range 5 days\n\n\n    var datetime = item.time;\n    var d = new Date(datetime);\n    var cur = new Date(); // console.log(cur);\n\n    var last = new Date(cur.getTime() - (4 * 24 * 60 * 60 * 1000 + 11 * 60 * 60 * 1000)); // console.log(last);\n\n    console.log(d);\n\n    if (d.getTime() >= last.getTime()) {\n      // console.log(d);\n      //compare the first active and the first away\n      //active < away ->  away - active\n      //active > away -> away - start + (one more away - start) \n      if (item.status == \"away\") {\n        dict[item.userid].away.push(d);\n      } else if (item.status == \"active\") {\n        dict[item.userid].active.push(d);\n      }\n    }\n  });\n  console.log(dict);\n  return Object.entries(dict).map(([key, value]) => React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, key, \" \", value.name, \": \"));\n};\n\nexport default Calculate;","map":{"version":3,"sources":["/Users/liwentian/Desktop/intern/slackapp/src/performance/components/Calculate.js"],"names":["React","PerformanceItem","differenceInCalendarMonths","Calculate","props","dict","items","map","item","hasOwnProperty","userid","name","datetime","time","d","Date","cur","last","getTime","console","log","status","away","push","active","Object","entries","key","value"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAASC,0BAAT,QAA2C,UAA3C;;AAIA,MAAMC,SAAS,GAAGC,KAAK,IAAI;AACvB,MAAIC,IAAI,GAAG,EAAX;AACAD,EAAAA,KAAK,CAACE,KAAN,CAAYC,GAAZ,CAAgBC,IAAI,IAAE;AAClB,QAAG,CAACH,IAAI,CAACI,cAAL,CAAoBD,IAAI,CAACE,MAAzB,CAAJ,EAAqC;AACjCL,MAAAA,IAAI,CAACG,IAAI,CAACE,MAAN,CAAJ,GAAoB;AAAC,gBAAOF,IAAI,CAACG,IAAb;AAAkB,gBAAO,EAAzB;AAA4B,kBAAS;AAArC,OAApB;AACH,KAHiB,CAKlB;;;AAEA,QAAIC,QAAQ,GAAGJ,IAAI,CAACK,IAApB;AAEA,QAAIC,CAAC,GAAG,IAAIC,IAAJ,CAASH,QAAT,CAAR;AACA,QAAII,GAAG,GAAG,IAAID,IAAJ,EAAV,CAVkB,CAWlB;;AACA,QAAIE,IAAI,GAAG,IAAIF,IAAJ,CAASC,GAAG,CAACE,OAAJ,MAAiB,IAAI,EAAJ,GAAS,EAAT,GAAc,EAAd,GAAmB,IAAnB,GAA0B,KAAK,EAAL,GAAU,EAAV,GAAe,IAA1D,CAAT,CAAX,CAZkB,CAalB;;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYN,CAAZ;;AACA,QAAGA,CAAC,CAACI,OAAF,MAAeD,IAAI,CAACC,OAAL,EAAlB,EAAiC;AAC7B;AACA;AACA;AACA;AACA,UAAGV,IAAI,CAACa,MAAL,IAAe,MAAlB,EAAyB;AACrBhB,QAAAA,IAAI,CAACG,IAAI,CAACE,MAAN,CAAJ,CAAkBY,IAAlB,CAAuBC,IAAvB,CAA4BT,CAA5B;AACH,OAFD,MAEM,IAAGN,IAAI,CAACa,MAAL,IAAe,QAAlB,EAA2B;AAC7BhB,QAAAA,IAAI,CAACG,IAAI,CAACE,MAAN,CAAJ,CAAkBc,MAAlB,CAAyBD,IAAzB,CAA8BT,CAA9B;AACH;AACJ;AAGJ,GA5BD;AA6BAK,EAAAA,OAAO,CAACC,GAAR,CAAYf,IAAZ;AAEF,SACEoB,MAAM,CAACC,OAAP,CAAerB,IAAf,EACCE,GADD,CACM,CAAC,CAACoB,GAAD,EAAMC,KAAN,CAAD,KAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAID,GAAJ,OAAUC,KAAK,CAACjB,IAAhB,OADxB,CADF;AAID,CArCD;;AAuCA,eAAeR,SAAf","sourcesContent":["import React from 'react';\n\nimport PerformanceItem from './PerformanceItem';\nimport { differenceInCalendarMonths } from 'date-fns';\n\n\n\nconst Calculate = props => {\n    let dict = {};\n    props.items.map(item=>{\n        if(!dict.hasOwnProperty(item.userid)){\n            dict[item.userid] = {\"name\":item.name,\"away\":[],\"active\":[]};\n        }\n        \n        //date has to be in range 5 days\n\n        var datetime = item.time;\n\n        var d = new Date(datetime);\n        var cur = new Date();\n        // console.log(cur);\n        var last = new Date(cur.getTime() - (4 * 24 * 60 * 60 * 1000 + 11 * 60 * 60 * 1000));\n        // console.log(last);\n        console.log(d);\n        if(d.getTime() >= last.getTime()){\n            // console.log(d);\n            //compare the first active and the first away\n            //active < away ->  away - active\n            //active > away -> away - start + (one more away - start) \n            if(item.status == \"away\"){\n                dict[item.userid].away.push(d);\n            }else if(item.status == \"active\"){\n                dict[item.userid].active.push(d);\n            }\n        }\n      \n       \n    })\n    console.log(dict);\n    \n  return (\n    Object.entries(dict)\n    .map( ([key, value]) => <p>{key} {value.name}: </p> )\n  )\n};\n\nexport default Calculate;\n"]},"metadata":{},"sourceType":"module"}